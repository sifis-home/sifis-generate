# Stages are run sequentially by the CI but each of them can contain
# parallel tasks
stages:
    - build # Build the code
    - test # Test the code

# Configuration for a specific machine.
# 1. Docker image containing all the neeeded software
# 2. Default stage where the image will be run
# 3. Additional software to be installed in the image
# 4. Tags to specify which kind of GitLab runners will be used in order to
#    run the image
.linux-common:
    image: python:3
    stage: build
    before_script:
        - pip3 install meson ninja gcovr
    tags:
        - docker

# Configuration for a specific machine.
# 1. Environment variables defined for the image
# 2. Docker image containing all the neeeded software
# 3. Default stage where the image will be run
# 4. Docker image that runs during a job linked to the Docker image defined
#    for the machine
# 5. Tags to specify which kind of GitLab runners will be used in order to
#    run the image
.docker-common:
    variables:
        # Determine the host to connect to
        DOCKER_HOST: tcp://docker:2375/
        # Storage driver, used to control how images and containers are stored
        # and managed on a Docker host
        DOCKER_DRIVER: overlay2
    image: docker/compose:debian-1.29.2
    stage: test
    services:
        # Docker-in-docker image
        - docker:dind
    tags:
        - docker

# Build a project on Ubuntu
build-linux:
    extends: .linux-common
    script:
        - meson setup --buildtype release .build-directory
        - meson compile -C .build-directory

# Run code coverage on Ubuntu
coverage-linux:
    stage: test
    extends: .linux-common
    script:
        - meson setup -Db_coverage=true .build-directory-coverage
        - meson test -C .build-directory-coverage
        - ninja coverage-xml -C .build-directory-coverage

# Run address sanitizer on Ubuntu
address-sanitaizer-linux:
    stage: test
    extends: .linux-common
    script:
        - meson setup --buildtype release
                      -Db_sanitize=address
                      -Db_lundef=false
                      .build-directory-asan
        - meson test -C .build-directory-asan

# Run docker compose tests
test-docker:
    extends: .docker-common
    script:
        - docker-compose up
